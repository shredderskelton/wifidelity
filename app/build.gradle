apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

static def evalVersionCode() {
    def process = "git rev-list --all --count".execute()
    return process.text.toInteger()
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.nickskelton.wifidelity"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode evalVersionCode()
        versionName "1.0.${evalVersionCode()}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias "debug-alias"
            keyPassword "password"
            storeFile file("../signing/debug/keystore.debug.jks")
            storePassword "password"
        }
        release {
            keyAlias project.hasProperty("keyAlias") ? project["keyAlias"] : "false"
            keyPassword project.hasProperty("keyPassword") ? project["keyPassword"] : "false"
            storeFile file(project.hasProperty("storeFile") ? project["storeFile"] : "../signing/debug/keystore.debug.jks")
            storePassword project.hasProperty("storePassword") ? project["storePassword"] : "false"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
            debuggable = true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

//    implementation "androidx.core:core-ktx:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.appcompat:appcompat:1.0.0"

    implementation "com.google.android.material:material:1.0.0"

    implementation "com.google.firebase:firebase-core:16.0.4"
    implementation "com.google.firebase:firebase-ml-vision:18.0.1"

    implementation "io.fotoapparat.fotoapparat:library:2.2.0"
    implementation "io.reactivex.rxjava2:rxkotlin:2.2.0"
    implementation "com.jakewharton.timber:timber:4.7.1"
//    implementation "com.jakewharton.rxrelay2:rxrelay:2.0.0"
//    implementation "com.github.tbruyelle:rxpermissions:0.10.2"
    implementation "com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar"

    implementation "me.xdrop:fuzzywuzzy:1.1.10"

    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    testImplementation "org.koin:koin-test:$koin_version"
    testImplementation "junit:junit:4.12"
    testImplementation "androidx.arch.core:core-testing:2.0.0"





    def lifecycle_version = "2.0.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // alternatively - just ViewModel
    //implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version" // use -ktx for Kotlin
    // alternatively - just LiveData
    //implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    //implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version" // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of lifecycle-compiler
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version" // use -ktx for Kotlin

    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
}

apply plugin: "com.google.gms.google-services"